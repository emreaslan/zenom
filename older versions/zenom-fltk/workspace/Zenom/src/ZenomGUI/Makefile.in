# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src/ZenomGUI
DIST_COMMON = $(SceneHS_HEADERS) $(SceneSource_HEADERS) \
	$(ZenomGUIHS_HEADERS) $(ZenomGUISource_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(SceneHSdir)" \
	"$(DESTDIR)$(SceneSourcedir)" "$(DESTDIR)$(ZenomGUIHSdir)" \
	"$(DESTDIR)$(ZenomGUISourcedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libZenomGUI_a_AR = $(AR) $(ARFLAGS)
libZenomGUI_a_LIBADD =
am__objects_1 = utils.$(OBJEXT) Camera.$(OBJEXT) Vector3D.$(OBJEXT) \
	VectorRotater.$(OBJEXT) Scene.$(OBJEXT) SceneWindow.$(OBJEXT) \
	SceneWindowManager.$(OBJEXT) ZAppearance.$(OBJEXT) \
	ZBox.$(OBJEXT) ZColorNode.$(OBJEXT) ZCone.$(OBJEXT) \
	ZCoordinate.$(OBJEXT) ZCylinder.$(OBJEXT) \
	ZDirectionalLight.$(OBJEXT) ZElevationGrid.$(OBJEXT) \
	ZGeometry.$(OBJEXT) ZGroup.$(OBJEXT) ZIndexedFaceSet.$(OBJEXT) \
	ZIndexedLineSet.$(OBJEXT) ZMaterial.$(OBJEXT) \
	ZNavigationInfo.$(OBJEXT) ZNormal.$(OBJEXT) \
	ZNotSupportedNode.$(OBJEXT) ZPointLight.$(OBJEXT) \
	ZPointSet.$(OBJEXT) ZShape.$(OBJEXT) ZSphere.$(OBJEXT) \
	ZSpotLight.$(OBJEXT) ZTransform.$(OBJEXT) ZViewpoint.$(OBJEXT) \
	ZVrmlNode.$(OBJEXT)
am__objects_2 = TextDisplayWidget.$(OBJEXT) ControlVarWindow.$(OBJEXT) \
	GlPlotWindow.$(OBJEXT) GlPlotWindowBase.$(OBJEXT) \
	GlPlotXYWindow.$(OBJEXT) Line.$(OBJEXT) LineBase.$(OBJEXT) \
	LineXY.$(OBJEXT) logVarWindow.$(OBJEXT) \
	messageHandler.$(OBJEXT) PlotBaseWindow.$(OBJEXT) \
	PlotRectangle.$(OBJEXT) PlotSelectedItem.$(OBJEXT) \
	PlotWindow.$(OBJEXT) PlotXYWindow.$(OBJEXT) \
	SevenSegment.$(OBJEXT) WatchSelectWindow.$(OBJEXT) \
	WatchWindow.$(OBJEXT) WatchWindowUpdater.$(OBJEXT) \
	ZButton.$(OBJEXT) zenom.$(OBJEXT) PlotWindowManager.$(OBJEXT) \
	PlotXYWindowManager.$(OBJEXT) zenomwindow.$(OBJEXT) \
	zenomlogo.$(OBJEXT)
am__objects_3 = Config.$(OBJEXT) ControlVariable.$(OBJEXT) \
	LogVariable.$(OBJEXT) LogVariableBase.$(OBJEXT) \
	LogVariableGUI.$(OBJEXT) Variable.$(OBJEXT) \
	guiMessenger.$(OBJEXT) pugixml.$(OBJEXT) ZString.$(OBJEXT) \
	ZPath.$(OBJEXT)
am_libZenomGUI_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3)
libZenomGUI_a_OBJECTS = $(am_libZenomGUI_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libZenomGUI_a_SOURCES)
DIST_SOURCES = $(libZenomGUI_a_SOURCES)
SceneHSHEADERS_INSTALL = $(INSTALL_HEADER)
SceneSourceHEADERS_INSTALL = $(INSTALL_HEADER)
ZenomGUIHSHEADERS_INSTALL = $(INSTALL_HEADER)
ZenomGUISourceHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(SceneHS_HEADERS) $(SceneSource_HEADERS) \
	$(ZenomGUIHS_HEADERS) $(ZenomGUISource_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = $(OPENVRML_LIB_FLAG) $(XENOMAI_LFLAGS)
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RTNET_FLAG = @RTNET_FLAG@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LIBRARIES = libZenomGUI.a
SCENEPATH = ../../include/ZenomGUI/Scene
SCENE_HS = $(SCENEPATH)/utils.h \
$(SCENEPATH)/Camera.h \
$(SCENEPATH)/Vector3D.h \
$(SCENEPATH)/VectorRotater.h \
$(SCENEPATH)/Scene.h \
$(SCENEPATH)/SceneWindow.h \
$(SCENEPATH)/SceneWindowManager.h \
$(SCENEPATH)/vrmlparserstructs.h \
$(SCENEPATH)/ZAppearance.h \
$(SCENEPATH)/ZBox.h \
$(SCENEPATH)/ZColorNode.h \
$(SCENEPATH)/ZCone.h \
$(SCENEPATH)/ZCoordinate.h \
$(SCENEPATH)/ZCylinder.h \
$(SCENEPATH)/ZDirectionalLight.h \
$(SCENEPATH)/ZElevationGrid.h \
$(SCENEPATH)/ZGeometry.h \
$(SCENEPATH)/ZGroup.h \
$(SCENEPATH)/ZIndexedFaceSet.h \
$(SCENEPATH)/ZIndexedLineSet.h \
$(SCENEPATH)/ZMaterial.h \
$(SCENEPATH)/ZNavigationInfo.h \
$(SCENEPATH)/ZNormal.h \
$(SCENEPATH)/ZNotSupportedNode.h \
$(SCENEPATH)/ZParameter.h \
$(SCENEPATH)/ZPointLight.h \
$(SCENEPATH)/ZPointSet.h \
$(SCENEPATH)/ZShape.h \
$(SCENEPATH)/ZTransform.h \
$(SCENEPATH)/ZViewpoint.h \
$(SCENEPATH)/ZVrmlNode.h

ZENOMGUIPATH = ../../include/ZenomGUI
ZENOMGUI_HS = $(ZENOMGUIPATH)/controlVarWindow.h \
$(ZENOMGUIPATH)/TextDisplayWidget.h \
$(ZENOMGUIPATH)/GlPlotWindow.h \
$(ZENOMGUIPATH)/GlPlotWindowBase.h \
$(ZENOMGUIPATH)/GlPlotXYWindow.h \
$(ZENOMGUIPATH)/Line.h \
$(ZENOMGUIPATH)/LineBase.h \
$(ZENOMGUIPATH)/LineXY.h \
$(ZENOMGUIPATH)/logVarWindow.h \
$(ZENOMGUIPATH)/PlotBaseWindow.h \
$(ZENOMGUIPATH)/PlotRectangle.h \
$(ZENOMGUIPATH)/PlotSelectedItem.h \
$(ZENOMGUIPATH)/PlotWindow.h \
$(ZENOMGUIPATH)/PlotXYWindow.h \
$(ZENOMGUIPATH)/SevenSegment.h \
$(ZENOMGUIPATH)/WatchSelectWindow.h \
$(ZENOMGUIPATH)/WatchWindow.h \
$(ZENOMGUIPATH)/ZButton.h \
$(ZENOMGUIPATH)/zenom.h \
$(ZENOMGUIPATH)/zenomwindow.h \
$(ZENOMGUIPATH)/zenomlogo.h \
$(ZENOMGUIPATH)/PlotWindowManager.h \
$(ZENOMGUIPATH)/PlotXYWindowManager.h \
$(ZENOMGUIPATH)/utils.h

SceneHSdir = $(includedir)/ZenomGUI/Scene
SceneHS_HEADERS = $(SCENE_HS)
ZenomGUIHSdir = $(includedir)/ZenomGUI
ZenomGUIHS_HEADERS = $(ZENOMGUI_HS) 
SCENESOURCEPATH = ./Scene
SCENE_SOURCES = $(SCENESOURCEPATH)/utils.cpp \
$(SCENESOURCEPATH)/Camera.cpp \
$(SCENESOURCEPATH)/Vector3D.cpp \
$(SCENESOURCEPATH)/VectorRotater.cpp \
$(SCENESOURCEPATH)/Scene.cpp \
$(SCENESOURCEPATH)/SceneWindow.cpp \
$(SCENESOURCEPATH)/SceneWindowManager.cpp \
$(SCENESOURCEPATH)/ZAppearance.cpp \
$(SCENESOURCEPATH)/ZBox.cpp \
$(SCENESOURCEPATH)/ZColorNode.cpp \
$(SCENESOURCEPATH)/ZCone.cpp \
$(SCENESOURCEPATH)/ZCoordinate.cpp \
$(SCENESOURCEPATH)/ZCylinder.cpp \
$(SCENESOURCEPATH)/ZDirectionalLight.cpp \
$(SCENESOURCEPATH)/ZElevationGrid.cpp \
$(SCENESOURCEPATH)/ZGeometry.cpp \
$(SCENESOURCEPATH)/ZGroup.cpp \
$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp \
$(SCENESOURCEPATH)/ZIndexedLineSet.cpp \
$(SCENESOURCEPATH)/ZMaterial.cpp \
$(SCENESOURCEPATH)/ZNavigationInfo.cpp \
$(SCENESOURCEPATH)/ZNormal.cpp \
$(SCENESOURCEPATH)/ZNotSupportedNode.cpp \
$(SCENESOURCEPATH)/ZPointLight.cpp \
$(SCENESOURCEPATH)/ZPointSet.cpp \
$(SCENESOURCEPATH)/ZShape.cpp \
$(SCENESOURCEPATH)/ZSphere.cpp \
$(SCENESOURCEPATH)/ZSpotLight.cpp \
$(SCENESOURCEPATH)/ZTransform.cpp \
$(SCENESOURCEPATH)/ZViewpoint.cpp \
$(SCENESOURCEPATH)/ZVrmlNode.cpp

ZENOMGUI_SOURCES = TextDisplayWidget.cpp ControlVarWindow.cpp GlPlotWindow.cpp GlPlotWindowBase.cpp GlPlotXYWindow.cpp Line.cpp LineBase.cpp LineXY.cpp logVarWindow.cpp messageHandler.cpp PlotBaseWindow.cpp PlotRectangle.cpp PlotSelectedItem.cpp PlotWindow.cpp PlotXYWindow.cpp SevenSegment.cpp WatchSelectWindow.cpp WatchWindow.cpp WatchWindowUpdater.cpp ZButton.cpp zenom.cpp PlotWindowManager.cpp PlotXYWindowManager.cpp zenomwindow.cpp zenomlogo.cpp
COMMON_SOURCES = ../Common/Config.cpp ../Common/ControlVariable.cpp  ../Common/LogVariable.cpp ../Common/LogVariableBase.cpp ../Common/../Common/LogVariableGUI.cpp ../Common/Variable.cpp ../Common/guiMessenger.cpp ../Common/pugixml.cpp ../Common/ZString.cpp ../Common/ZPath.cpp
libZenomGUI_a_SOURCES = $(SCENE_SOURCES) $(ZENOMGUI_SOURCES) $(COMMON_SOURCES) 
ZenomGUISourcedir = ${prefix}/src/ZenomGUI
ZenomGUISource_HEADERS = $(ZENOMGUI_SOURCES)
SceneSourcedir = ${prefix}/src/ZenomGUI/Scene
SceneSource_HEADERS = $(SCENE_SOURCES)
GENERAL_CFLAGS = -W -Wall -fexceptions -fno-builtin -O2 -fpic -D_REENTRANT -c -g
XENOMAI_CFLAGS = $(shell /usr/xenomai/bin/xeno-config --posix-cflags) $(shell /usr/xenomai/bin/xeno-config --xeno-cflags)
XENOMAI_LFLAGS = $(shell /usr/xenomai/bin/xeno-config --posix-ldflags) $(shell /usr/xenomai/bin/xeno-config --xeno-ldflags)
FLTK_INCLUDE_FLAG = $(shell fltk2-config --cxxflags)
FLTK_FLAGS = $(shell fltk2-config --ldflags --use-gl --use-images --use-glut)
OPENVRML_FLAG = -I /usr/include/openvrml/ -DBOOST_SPIRIT_THREADSAFE -DBOOST_SPIRIT_CLOSURE_LIMIT=6 -DPHOENIX_LIMIT=6
SCENE_FLAG = -I ../../include/ZenomGUI/Scene
ZENOMGUI_FLAG = -I ../../include/ZenomGUI
COMMON_FLAG = -I ../../include/Common
QMATH_FLAG = -I ../../include/QMath
NATIVE_INCLUDE_FLAG = -I ../../include/XenoTools/native
POSIX_INCLUDE_FLAG = -I ../../include/XenoTools/posix
OPENVRML_LIB_FLAG = -L/usr/lib64 -lopenvrml
ZENOMGUILIB_FLAGS = $(NATIVE_INCLUDE_FLAG) $(POSIX_INCLUDE_FLAG) $(COMMON_FLAG) $(QMATH_FLAG) $(XENOMAI_CFLAGS) $(ZENOMGUI_FLAG) -I @RTNET_FLAG@ $(FLTK_FLAGS) $(FLTK_INCLUDE_FLAG) $(SCENE_FLAG) $(OPENVRML_FLAG)
libZenomGUI_a_INCLUDES = $(ZENOMGUILIB_FLAGS) $(GENERAL_CFLAGS)
INCLUDES = $(ZENOMGUILIB_FLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/ZenomGUI/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/ZenomGUI/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libZenomGUI.a: $(libZenomGUI_a_OBJECTS) $(libZenomGUI_a_DEPENDENCIES) 
	-rm -f libZenomGUI.a
	$(libZenomGUI_a_AR) libZenomGUI.a $(libZenomGUI_a_OBJECTS) $(libZenomGUI_a_LIBADD)
	$(RANLIB) libZenomGUI.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Camera.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ControlVarWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ControlVariable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GlPlotWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GlPlotWindowBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GlPlotXYWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Line.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LineBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LineXY.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LogVariable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LogVariableBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LogVariableGUI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlotBaseWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlotRectangle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlotSelectedItem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlotWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlotWindowManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlotXYWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlotXYWindowManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Scene.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SceneWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SceneWindowManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SevenSegment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TextDisplayWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Variable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Vector3D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VectorRotater.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WatchSelectWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WatchWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WatchWindowUpdater.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZAppearance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZBox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZButton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZColorNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZCone.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZCoordinate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZCylinder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZDirectionalLight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZElevationGrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZGeometry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZGroup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZIndexedFaceSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZIndexedLineSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZMaterial.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZNavigationInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZNormal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZNotSupportedNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZPath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZPointLight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZPointSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZShape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZSphere.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZSpotLight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZString.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZTransform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZViewpoint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ZVrmlNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/guiMessenger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/logVarWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/messageHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pugixml.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zenom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zenomlogo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zenomwindow.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

utils.o: $(SCENESOURCEPATH)/utils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils.o -MD -MP -MF $(DEPDIR)/utils.Tpo -c -o utils.o `test -f '$(SCENESOURCEPATH)/utils.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/utils.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/utils.Tpo $(DEPDIR)/utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/utils.cpp' object='utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils.o `test -f '$(SCENESOURCEPATH)/utils.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/utils.cpp

utils.obj: $(SCENESOURCEPATH)/utils.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utils.obj -MD -MP -MF $(DEPDIR)/utils.Tpo -c -o utils.obj `if test -f '$(SCENESOURCEPATH)/utils.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/utils.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/utils.Tpo $(DEPDIR)/utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/utils.cpp' object='utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utils.obj `if test -f '$(SCENESOURCEPATH)/utils.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/utils.cpp'; fi`

Camera.o: $(SCENESOURCEPATH)/Camera.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Camera.o -MD -MP -MF $(DEPDIR)/Camera.Tpo -c -o Camera.o `test -f '$(SCENESOURCEPATH)/Camera.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/Camera.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Camera.Tpo $(DEPDIR)/Camera.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/Camera.cpp' object='Camera.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Camera.o `test -f '$(SCENESOURCEPATH)/Camera.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/Camera.cpp

Camera.obj: $(SCENESOURCEPATH)/Camera.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Camera.obj -MD -MP -MF $(DEPDIR)/Camera.Tpo -c -o Camera.obj `if test -f '$(SCENESOURCEPATH)/Camera.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/Camera.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/Camera.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Camera.Tpo $(DEPDIR)/Camera.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/Camera.cpp' object='Camera.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Camera.obj `if test -f '$(SCENESOURCEPATH)/Camera.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/Camera.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/Camera.cpp'; fi`

Vector3D.o: $(SCENESOURCEPATH)/Vector3D.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Vector3D.o -MD -MP -MF $(DEPDIR)/Vector3D.Tpo -c -o Vector3D.o `test -f '$(SCENESOURCEPATH)/Vector3D.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/Vector3D.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Vector3D.Tpo $(DEPDIR)/Vector3D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/Vector3D.cpp' object='Vector3D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vector3D.o `test -f '$(SCENESOURCEPATH)/Vector3D.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/Vector3D.cpp

Vector3D.obj: $(SCENESOURCEPATH)/Vector3D.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Vector3D.obj -MD -MP -MF $(DEPDIR)/Vector3D.Tpo -c -o Vector3D.obj `if test -f '$(SCENESOURCEPATH)/Vector3D.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/Vector3D.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/Vector3D.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Vector3D.Tpo $(DEPDIR)/Vector3D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/Vector3D.cpp' object='Vector3D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vector3D.obj `if test -f '$(SCENESOURCEPATH)/Vector3D.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/Vector3D.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/Vector3D.cpp'; fi`

VectorRotater.o: $(SCENESOURCEPATH)/VectorRotater.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VectorRotater.o -MD -MP -MF $(DEPDIR)/VectorRotater.Tpo -c -o VectorRotater.o `test -f '$(SCENESOURCEPATH)/VectorRotater.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/VectorRotater.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/VectorRotater.Tpo $(DEPDIR)/VectorRotater.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/VectorRotater.cpp' object='VectorRotater.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VectorRotater.o `test -f '$(SCENESOURCEPATH)/VectorRotater.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/VectorRotater.cpp

VectorRotater.obj: $(SCENESOURCEPATH)/VectorRotater.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VectorRotater.obj -MD -MP -MF $(DEPDIR)/VectorRotater.Tpo -c -o VectorRotater.obj `if test -f '$(SCENESOURCEPATH)/VectorRotater.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/VectorRotater.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/VectorRotater.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/VectorRotater.Tpo $(DEPDIR)/VectorRotater.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/VectorRotater.cpp' object='VectorRotater.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VectorRotater.obj `if test -f '$(SCENESOURCEPATH)/VectorRotater.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/VectorRotater.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/VectorRotater.cpp'; fi`

Scene.o: $(SCENESOURCEPATH)/Scene.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Scene.o -MD -MP -MF $(DEPDIR)/Scene.Tpo -c -o Scene.o `test -f '$(SCENESOURCEPATH)/Scene.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/Scene.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Scene.Tpo $(DEPDIR)/Scene.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/Scene.cpp' object='Scene.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Scene.o `test -f '$(SCENESOURCEPATH)/Scene.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/Scene.cpp

Scene.obj: $(SCENESOURCEPATH)/Scene.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Scene.obj -MD -MP -MF $(DEPDIR)/Scene.Tpo -c -o Scene.obj `if test -f '$(SCENESOURCEPATH)/Scene.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/Scene.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/Scene.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Scene.Tpo $(DEPDIR)/Scene.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/Scene.cpp' object='Scene.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Scene.obj `if test -f '$(SCENESOURCEPATH)/Scene.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/Scene.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/Scene.cpp'; fi`

SceneWindow.o: $(SCENESOURCEPATH)/SceneWindow.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SceneWindow.o -MD -MP -MF $(DEPDIR)/SceneWindow.Tpo -c -o SceneWindow.o `test -f '$(SCENESOURCEPATH)/SceneWindow.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/SceneWindow.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/SceneWindow.Tpo $(DEPDIR)/SceneWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/SceneWindow.cpp' object='SceneWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SceneWindow.o `test -f '$(SCENESOURCEPATH)/SceneWindow.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/SceneWindow.cpp

SceneWindow.obj: $(SCENESOURCEPATH)/SceneWindow.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SceneWindow.obj -MD -MP -MF $(DEPDIR)/SceneWindow.Tpo -c -o SceneWindow.obj `if test -f '$(SCENESOURCEPATH)/SceneWindow.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/SceneWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/SceneWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/SceneWindow.Tpo $(DEPDIR)/SceneWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/SceneWindow.cpp' object='SceneWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SceneWindow.obj `if test -f '$(SCENESOURCEPATH)/SceneWindow.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/SceneWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/SceneWindow.cpp'; fi`

SceneWindowManager.o: $(SCENESOURCEPATH)/SceneWindowManager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SceneWindowManager.o -MD -MP -MF $(DEPDIR)/SceneWindowManager.Tpo -c -o SceneWindowManager.o `test -f '$(SCENESOURCEPATH)/SceneWindowManager.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/SceneWindowManager.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/SceneWindowManager.Tpo $(DEPDIR)/SceneWindowManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/SceneWindowManager.cpp' object='SceneWindowManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SceneWindowManager.o `test -f '$(SCENESOURCEPATH)/SceneWindowManager.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/SceneWindowManager.cpp

SceneWindowManager.obj: $(SCENESOURCEPATH)/SceneWindowManager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SceneWindowManager.obj -MD -MP -MF $(DEPDIR)/SceneWindowManager.Tpo -c -o SceneWindowManager.obj `if test -f '$(SCENESOURCEPATH)/SceneWindowManager.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/SceneWindowManager.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/SceneWindowManager.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/SceneWindowManager.Tpo $(DEPDIR)/SceneWindowManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/SceneWindowManager.cpp' object='SceneWindowManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SceneWindowManager.obj `if test -f '$(SCENESOURCEPATH)/SceneWindowManager.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/SceneWindowManager.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/SceneWindowManager.cpp'; fi`

ZAppearance.o: $(SCENESOURCEPATH)/ZAppearance.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZAppearance.o -MD -MP -MF $(DEPDIR)/ZAppearance.Tpo -c -o ZAppearance.o `test -f '$(SCENESOURCEPATH)/ZAppearance.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZAppearance.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZAppearance.Tpo $(DEPDIR)/ZAppearance.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZAppearance.cpp' object='ZAppearance.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZAppearance.o `test -f '$(SCENESOURCEPATH)/ZAppearance.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZAppearance.cpp

ZAppearance.obj: $(SCENESOURCEPATH)/ZAppearance.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZAppearance.obj -MD -MP -MF $(DEPDIR)/ZAppearance.Tpo -c -o ZAppearance.obj `if test -f '$(SCENESOURCEPATH)/ZAppearance.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZAppearance.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZAppearance.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZAppearance.Tpo $(DEPDIR)/ZAppearance.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZAppearance.cpp' object='ZAppearance.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZAppearance.obj `if test -f '$(SCENESOURCEPATH)/ZAppearance.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZAppearance.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZAppearance.cpp'; fi`

ZBox.o: $(SCENESOURCEPATH)/ZBox.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZBox.o -MD -MP -MF $(DEPDIR)/ZBox.Tpo -c -o ZBox.o `test -f '$(SCENESOURCEPATH)/ZBox.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZBox.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZBox.Tpo $(DEPDIR)/ZBox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZBox.cpp' object='ZBox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZBox.o `test -f '$(SCENESOURCEPATH)/ZBox.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZBox.cpp

ZBox.obj: $(SCENESOURCEPATH)/ZBox.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZBox.obj -MD -MP -MF $(DEPDIR)/ZBox.Tpo -c -o ZBox.obj `if test -f '$(SCENESOURCEPATH)/ZBox.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZBox.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZBox.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZBox.Tpo $(DEPDIR)/ZBox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZBox.cpp' object='ZBox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZBox.obj `if test -f '$(SCENESOURCEPATH)/ZBox.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZBox.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZBox.cpp'; fi`

ZColorNode.o: $(SCENESOURCEPATH)/ZColorNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZColorNode.o -MD -MP -MF $(DEPDIR)/ZColorNode.Tpo -c -o ZColorNode.o `test -f '$(SCENESOURCEPATH)/ZColorNode.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZColorNode.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZColorNode.Tpo $(DEPDIR)/ZColorNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZColorNode.cpp' object='ZColorNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZColorNode.o `test -f '$(SCENESOURCEPATH)/ZColorNode.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZColorNode.cpp

ZColorNode.obj: $(SCENESOURCEPATH)/ZColorNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZColorNode.obj -MD -MP -MF $(DEPDIR)/ZColorNode.Tpo -c -o ZColorNode.obj `if test -f '$(SCENESOURCEPATH)/ZColorNode.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZColorNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZColorNode.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZColorNode.Tpo $(DEPDIR)/ZColorNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZColorNode.cpp' object='ZColorNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZColorNode.obj `if test -f '$(SCENESOURCEPATH)/ZColorNode.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZColorNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZColorNode.cpp'; fi`

ZCone.o: $(SCENESOURCEPATH)/ZCone.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZCone.o -MD -MP -MF $(DEPDIR)/ZCone.Tpo -c -o ZCone.o `test -f '$(SCENESOURCEPATH)/ZCone.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZCone.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZCone.Tpo $(DEPDIR)/ZCone.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZCone.cpp' object='ZCone.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZCone.o `test -f '$(SCENESOURCEPATH)/ZCone.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZCone.cpp

ZCone.obj: $(SCENESOURCEPATH)/ZCone.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZCone.obj -MD -MP -MF $(DEPDIR)/ZCone.Tpo -c -o ZCone.obj `if test -f '$(SCENESOURCEPATH)/ZCone.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZCone.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZCone.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZCone.Tpo $(DEPDIR)/ZCone.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZCone.cpp' object='ZCone.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZCone.obj `if test -f '$(SCENESOURCEPATH)/ZCone.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZCone.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZCone.cpp'; fi`

ZCoordinate.o: $(SCENESOURCEPATH)/ZCoordinate.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZCoordinate.o -MD -MP -MF $(DEPDIR)/ZCoordinate.Tpo -c -o ZCoordinate.o `test -f '$(SCENESOURCEPATH)/ZCoordinate.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZCoordinate.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZCoordinate.Tpo $(DEPDIR)/ZCoordinate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZCoordinate.cpp' object='ZCoordinate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZCoordinate.o `test -f '$(SCENESOURCEPATH)/ZCoordinate.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZCoordinate.cpp

ZCoordinate.obj: $(SCENESOURCEPATH)/ZCoordinate.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZCoordinate.obj -MD -MP -MF $(DEPDIR)/ZCoordinate.Tpo -c -o ZCoordinate.obj `if test -f '$(SCENESOURCEPATH)/ZCoordinate.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZCoordinate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZCoordinate.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZCoordinate.Tpo $(DEPDIR)/ZCoordinate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZCoordinate.cpp' object='ZCoordinate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZCoordinate.obj `if test -f '$(SCENESOURCEPATH)/ZCoordinate.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZCoordinate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZCoordinate.cpp'; fi`

ZCylinder.o: $(SCENESOURCEPATH)/ZCylinder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZCylinder.o -MD -MP -MF $(DEPDIR)/ZCylinder.Tpo -c -o ZCylinder.o `test -f '$(SCENESOURCEPATH)/ZCylinder.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZCylinder.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZCylinder.Tpo $(DEPDIR)/ZCylinder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZCylinder.cpp' object='ZCylinder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZCylinder.o `test -f '$(SCENESOURCEPATH)/ZCylinder.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZCylinder.cpp

ZCylinder.obj: $(SCENESOURCEPATH)/ZCylinder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZCylinder.obj -MD -MP -MF $(DEPDIR)/ZCylinder.Tpo -c -o ZCylinder.obj `if test -f '$(SCENESOURCEPATH)/ZCylinder.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZCylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZCylinder.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZCylinder.Tpo $(DEPDIR)/ZCylinder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZCylinder.cpp' object='ZCylinder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZCylinder.obj `if test -f '$(SCENESOURCEPATH)/ZCylinder.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZCylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZCylinder.cpp'; fi`

ZDirectionalLight.o: $(SCENESOURCEPATH)/ZDirectionalLight.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZDirectionalLight.o -MD -MP -MF $(DEPDIR)/ZDirectionalLight.Tpo -c -o ZDirectionalLight.o `test -f '$(SCENESOURCEPATH)/ZDirectionalLight.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZDirectionalLight.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZDirectionalLight.Tpo $(DEPDIR)/ZDirectionalLight.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZDirectionalLight.cpp' object='ZDirectionalLight.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZDirectionalLight.o `test -f '$(SCENESOURCEPATH)/ZDirectionalLight.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZDirectionalLight.cpp

ZDirectionalLight.obj: $(SCENESOURCEPATH)/ZDirectionalLight.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZDirectionalLight.obj -MD -MP -MF $(DEPDIR)/ZDirectionalLight.Tpo -c -o ZDirectionalLight.obj `if test -f '$(SCENESOURCEPATH)/ZDirectionalLight.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZDirectionalLight.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZDirectionalLight.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZDirectionalLight.Tpo $(DEPDIR)/ZDirectionalLight.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZDirectionalLight.cpp' object='ZDirectionalLight.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZDirectionalLight.obj `if test -f '$(SCENESOURCEPATH)/ZDirectionalLight.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZDirectionalLight.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZDirectionalLight.cpp'; fi`

ZElevationGrid.o: $(SCENESOURCEPATH)/ZElevationGrid.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZElevationGrid.o -MD -MP -MF $(DEPDIR)/ZElevationGrid.Tpo -c -o ZElevationGrid.o `test -f '$(SCENESOURCEPATH)/ZElevationGrid.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZElevationGrid.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZElevationGrid.Tpo $(DEPDIR)/ZElevationGrid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZElevationGrid.cpp' object='ZElevationGrid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZElevationGrid.o `test -f '$(SCENESOURCEPATH)/ZElevationGrid.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZElevationGrid.cpp

ZElevationGrid.obj: $(SCENESOURCEPATH)/ZElevationGrid.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZElevationGrid.obj -MD -MP -MF $(DEPDIR)/ZElevationGrid.Tpo -c -o ZElevationGrid.obj `if test -f '$(SCENESOURCEPATH)/ZElevationGrid.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZElevationGrid.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZElevationGrid.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZElevationGrid.Tpo $(DEPDIR)/ZElevationGrid.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZElevationGrid.cpp' object='ZElevationGrid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZElevationGrid.obj `if test -f '$(SCENESOURCEPATH)/ZElevationGrid.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZElevationGrid.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZElevationGrid.cpp'; fi`

ZGeometry.o: $(SCENESOURCEPATH)/ZGeometry.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZGeometry.o -MD -MP -MF $(DEPDIR)/ZGeometry.Tpo -c -o ZGeometry.o `test -f '$(SCENESOURCEPATH)/ZGeometry.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZGeometry.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZGeometry.Tpo $(DEPDIR)/ZGeometry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZGeometry.cpp' object='ZGeometry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZGeometry.o `test -f '$(SCENESOURCEPATH)/ZGeometry.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZGeometry.cpp

ZGeometry.obj: $(SCENESOURCEPATH)/ZGeometry.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZGeometry.obj -MD -MP -MF $(DEPDIR)/ZGeometry.Tpo -c -o ZGeometry.obj `if test -f '$(SCENESOURCEPATH)/ZGeometry.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZGeometry.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZGeometry.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZGeometry.Tpo $(DEPDIR)/ZGeometry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZGeometry.cpp' object='ZGeometry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZGeometry.obj `if test -f '$(SCENESOURCEPATH)/ZGeometry.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZGeometry.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZGeometry.cpp'; fi`

ZGroup.o: $(SCENESOURCEPATH)/ZGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZGroup.o -MD -MP -MF $(DEPDIR)/ZGroup.Tpo -c -o ZGroup.o `test -f '$(SCENESOURCEPATH)/ZGroup.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZGroup.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZGroup.Tpo $(DEPDIR)/ZGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZGroup.cpp' object='ZGroup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZGroup.o `test -f '$(SCENESOURCEPATH)/ZGroup.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZGroup.cpp

ZGroup.obj: $(SCENESOURCEPATH)/ZGroup.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZGroup.obj -MD -MP -MF $(DEPDIR)/ZGroup.Tpo -c -o ZGroup.obj `if test -f '$(SCENESOURCEPATH)/ZGroup.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZGroup.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZGroup.Tpo $(DEPDIR)/ZGroup.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZGroup.cpp' object='ZGroup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZGroup.obj `if test -f '$(SCENESOURCEPATH)/ZGroup.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZGroup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZGroup.cpp'; fi`

ZIndexedFaceSet.o: $(SCENESOURCEPATH)/ZIndexedFaceSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZIndexedFaceSet.o -MD -MP -MF $(DEPDIR)/ZIndexedFaceSet.Tpo -c -o ZIndexedFaceSet.o `test -f '$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZIndexedFaceSet.Tpo $(DEPDIR)/ZIndexedFaceSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp' object='ZIndexedFaceSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZIndexedFaceSet.o `test -f '$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp

ZIndexedFaceSet.obj: $(SCENESOURCEPATH)/ZIndexedFaceSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZIndexedFaceSet.obj -MD -MP -MF $(DEPDIR)/ZIndexedFaceSet.Tpo -c -o ZIndexedFaceSet.obj `if test -f '$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZIndexedFaceSet.Tpo $(DEPDIR)/ZIndexedFaceSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp' object='ZIndexedFaceSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZIndexedFaceSet.obj `if test -f '$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZIndexedFaceSet.cpp'; fi`

ZIndexedLineSet.o: $(SCENESOURCEPATH)/ZIndexedLineSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZIndexedLineSet.o -MD -MP -MF $(DEPDIR)/ZIndexedLineSet.Tpo -c -o ZIndexedLineSet.o `test -f '$(SCENESOURCEPATH)/ZIndexedLineSet.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZIndexedLineSet.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZIndexedLineSet.Tpo $(DEPDIR)/ZIndexedLineSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZIndexedLineSet.cpp' object='ZIndexedLineSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZIndexedLineSet.o `test -f '$(SCENESOURCEPATH)/ZIndexedLineSet.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZIndexedLineSet.cpp

ZIndexedLineSet.obj: $(SCENESOURCEPATH)/ZIndexedLineSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZIndexedLineSet.obj -MD -MP -MF $(DEPDIR)/ZIndexedLineSet.Tpo -c -o ZIndexedLineSet.obj `if test -f '$(SCENESOURCEPATH)/ZIndexedLineSet.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZIndexedLineSet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZIndexedLineSet.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZIndexedLineSet.Tpo $(DEPDIR)/ZIndexedLineSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZIndexedLineSet.cpp' object='ZIndexedLineSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZIndexedLineSet.obj `if test -f '$(SCENESOURCEPATH)/ZIndexedLineSet.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZIndexedLineSet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZIndexedLineSet.cpp'; fi`

ZMaterial.o: $(SCENESOURCEPATH)/ZMaterial.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZMaterial.o -MD -MP -MF $(DEPDIR)/ZMaterial.Tpo -c -o ZMaterial.o `test -f '$(SCENESOURCEPATH)/ZMaterial.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZMaterial.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZMaterial.Tpo $(DEPDIR)/ZMaterial.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZMaterial.cpp' object='ZMaterial.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZMaterial.o `test -f '$(SCENESOURCEPATH)/ZMaterial.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZMaterial.cpp

ZMaterial.obj: $(SCENESOURCEPATH)/ZMaterial.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZMaterial.obj -MD -MP -MF $(DEPDIR)/ZMaterial.Tpo -c -o ZMaterial.obj `if test -f '$(SCENESOURCEPATH)/ZMaterial.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZMaterial.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZMaterial.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZMaterial.Tpo $(DEPDIR)/ZMaterial.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZMaterial.cpp' object='ZMaterial.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZMaterial.obj `if test -f '$(SCENESOURCEPATH)/ZMaterial.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZMaterial.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZMaterial.cpp'; fi`

ZNavigationInfo.o: $(SCENESOURCEPATH)/ZNavigationInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZNavigationInfo.o -MD -MP -MF $(DEPDIR)/ZNavigationInfo.Tpo -c -o ZNavigationInfo.o `test -f '$(SCENESOURCEPATH)/ZNavigationInfo.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZNavigationInfo.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZNavigationInfo.Tpo $(DEPDIR)/ZNavigationInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZNavigationInfo.cpp' object='ZNavigationInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZNavigationInfo.o `test -f '$(SCENESOURCEPATH)/ZNavigationInfo.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZNavigationInfo.cpp

ZNavigationInfo.obj: $(SCENESOURCEPATH)/ZNavigationInfo.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZNavigationInfo.obj -MD -MP -MF $(DEPDIR)/ZNavigationInfo.Tpo -c -o ZNavigationInfo.obj `if test -f '$(SCENESOURCEPATH)/ZNavigationInfo.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZNavigationInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZNavigationInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZNavigationInfo.Tpo $(DEPDIR)/ZNavigationInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZNavigationInfo.cpp' object='ZNavigationInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZNavigationInfo.obj `if test -f '$(SCENESOURCEPATH)/ZNavigationInfo.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZNavigationInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZNavigationInfo.cpp'; fi`

ZNormal.o: $(SCENESOURCEPATH)/ZNormal.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZNormal.o -MD -MP -MF $(DEPDIR)/ZNormal.Tpo -c -o ZNormal.o `test -f '$(SCENESOURCEPATH)/ZNormal.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZNormal.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZNormal.Tpo $(DEPDIR)/ZNormal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZNormal.cpp' object='ZNormal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZNormal.o `test -f '$(SCENESOURCEPATH)/ZNormal.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZNormal.cpp

ZNormal.obj: $(SCENESOURCEPATH)/ZNormal.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZNormal.obj -MD -MP -MF $(DEPDIR)/ZNormal.Tpo -c -o ZNormal.obj `if test -f '$(SCENESOURCEPATH)/ZNormal.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZNormal.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZNormal.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZNormal.Tpo $(DEPDIR)/ZNormal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZNormal.cpp' object='ZNormal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZNormal.obj `if test -f '$(SCENESOURCEPATH)/ZNormal.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZNormal.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZNormal.cpp'; fi`

ZNotSupportedNode.o: $(SCENESOURCEPATH)/ZNotSupportedNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZNotSupportedNode.o -MD -MP -MF $(DEPDIR)/ZNotSupportedNode.Tpo -c -o ZNotSupportedNode.o `test -f '$(SCENESOURCEPATH)/ZNotSupportedNode.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZNotSupportedNode.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZNotSupportedNode.Tpo $(DEPDIR)/ZNotSupportedNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZNotSupportedNode.cpp' object='ZNotSupportedNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZNotSupportedNode.o `test -f '$(SCENESOURCEPATH)/ZNotSupportedNode.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZNotSupportedNode.cpp

ZNotSupportedNode.obj: $(SCENESOURCEPATH)/ZNotSupportedNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZNotSupportedNode.obj -MD -MP -MF $(DEPDIR)/ZNotSupportedNode.Tpo -c -o ZNotSupportedNode.obj `if test -f '$(SCENESOURCEPATH)/ZNotSupportedNode.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZNotSupportedNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZNotSupportedNode.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZNotSupportedNode.Tpo $(DEPDIR)/ZNotSupportedNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZNotSupportedNode.cpp' object='ZNotSupportedNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZNotSupportedNode.obj `if test -f '$(SCENESOURCEPATH)/ZNotSupportedNode.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZNotSupportedNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZNotSupportedNode.cpp'; fi`

ZPointLight.o: $(SCENESOURCEPATH)/ZPointLight.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZPointLight.o -MD -MP -MF $(DEPDIR)/ZPointLight.Tpo -c -o ZPointLight.o `test -f '$(SCENESOURCEPATH)/ZPointLight.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZPointLight.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZPointLight.Tpo $(DEPDIR)/ZPointLight.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZPointLight.cpp' object='ZPointLight.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZPointLight.o `test -f '$(SCENESOURCEPATH)/ZPointLight.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZPointLight.cpp

ZPointLight.obj: $(SCENESOURCEPATH)/ZPointLight.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZPointLight.obj -MD -MP -MF $(DEPDIR)/ZPointLight.Tpo -c -o ZPointLight.obj `if test -f '$(SCENESOURCEPATH)/ZPointLight.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZPointLight.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZPointLight.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZPointLight.Tpo $(DEPDIR)/ZPointLight.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZPointLight.cpp' object='ZPointLight.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZPointLight.obj `if test -f '$(SCENESOURCEPATH)/ZPointLight.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZPointLight.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZPointLight.cpp'; fi`

ZPointSet.o: $(SCENESOURCEPATH)/ZPointSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZPointSet.o -MD -MP -MF $(DEPDIR)/ZPointSet.Tpo -c -o ZPointSet.o `test -f '$(SCENESOURCEPATH)/ZPointSet.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZPointSet.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZPointSet.Tpo $(DEPDIR)/ZPointSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZPointSet.cpp' object='ZPointSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZPointSet.o `test -f '$(SCENESOURCEPATH)/ZPointSet.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZPointSet.cpp

ZPointSet.obj: $(SCENESOURCEPATH)/ZPointSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZPointSet.obj -MD -MP -MF $(DEPDIR)/ZPointSet.Tpo -c -o ZPointSet.obj `if test -f '$(SCENESOURCEPATH)/ZPointSet.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZPointSet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZPointSet.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZPointSet.Tpo $(DEPDIR)/ZPointSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZPointSet.cpp' object='ZPointSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZPointSet.obj `if test -f '$(SCENESOURCEPATH)/ZPointSet.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZPointSet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZPointSet.cpp'; fi`

ZShape.o: $(SCENESOURCEPATH)/ZShape.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZShape.o -MD -MP -MF $(DEPDIR)/ZShape.Tpo -c -o ZShape.o `test -f '$(SCENESOURCEPATH)/ZShape.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZShape.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZShape.Tpo $(DEPDIR)/ZShape.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZShape.cpp' object='ZShape.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZShape.o `test -f '$(SCENESOURCEPATH)/ZShape.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZShape.cpp

ZShape.obj: $(SCENESOURCEPATH)/ZShape.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZShape.obj -MD -MP -MF $(DEPDIR)/ZShape.Tpo -c -o ZShape.obj `if test -f '$(SCENESOURCEPATH)/ZShape.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZShape.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZShape.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZShape.Tpo $(DEPDIR)/ZShape.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZShape.cpp' object='ZShape.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZShape.obj `if test -f '$(SCENESOURCEPATH)/ZShape.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZShape.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZShape.cpp'; fi`

ZSphere.o: $(SCENESOURCEPATH)/ZSphere.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZSphere.o -MD -MP -MF $(DEPDIR)/ZSphere.Tpo -c -o ZSphere.o `test -f '$(SCENESOURCEPATH)/ZSphere.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZSphere.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZSphere.Tpo $(DEPDIR)/ZSphere.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZSphere.cpp' object='ZSphere.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZSphere.o `test -f '$(SCENESOURCEPATH)/ZSphere.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZSphere.cpp

ZSphere.obj: $(SCENESOURCEPATH)/ZSphere.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZSphere.obj -MD -MP -MF $(DEPDIR)/ZSphere.Tpo -c -o ZSphere.obj `if test -f '$(SCENESOURCEPATH)/ZSphere.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZSphere.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZSphere.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZSphere.Tpo $(DEPDIR)/ZSphere.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZSphere.cpp' object='ZSphere.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZSphere.obj `if test -f '$(SCENESOURCEPATH)/ZSphere.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZSphere.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZSphere.cpp'; fi`

ZSpotLight.o: $(SCENESOURCEPATH)/ZSpotLight.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZSpotLight.o -MD -MP -MF $(DEPDIR)/ZSpotLight.Tpo -c -o ZSpotLight.o `test -f '$(SCENESOURCEPATH)/ZSpotLight.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZSpotLight.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZSpotLight.Tpo $(DEPDIR)/ZSpotLight.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZSpotLight.cpp' object='ZSpotLight.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZSpotLight.o `test -f '$(SCENESOURCEPATH)/ZSpotLight.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZSpotLight.cpp

ZSpotLight.obj: $(SCENESOURCEPATH)/ZSpotLight.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZSpotLight.obj -MD -MP -MF $(DEPDIR)/ZSpotLight.Tpo -c -o ZSpotLight.obj `if test -f '$(SCENESOURCEPATH)/ZSpotLight.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZSpotLight.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZSpotLight.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZSpotLight.Tpo $(DEPDIR)/ZSpotLight.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZSpotLight.cpp' object='ZSpotLight.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZSpotLight.obj `if test -f '$(SCENESOURCEPATH)/ZSpotLight.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZSpotLight.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZSpotLight.cpp'; fi`

ZTransform.o: $(SCENESOURCEPATH)/ZTransform.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZTransform.o -MD -MP -MF $(DEPDIR)/ZTransform.Tpo -c -o ZTransform.o `test -f '$(SCENESOURCEPATH)/ZTransform.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZTransform.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZTransform.Tpo $(DEPDIR)/ZTransform.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZTransform.cpp' object='ZTransform.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZTransform.o `test -f '$(SCENESOURCEPATH)/ZTransform.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZTransform.cpp

ZTransform.obj: $(SCENESOURCEPATH)/ZTransform.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZTransform.obj -MD -MP -MF $(DEPDIR)/ZTransform.Tpo -c -o ZTransform.obj `if test -f '$(SCENESOURCEPATH)/ZTransform.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZTransform.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZTransform.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZTransform.Tpo $(DEPDIR)/ZTransform.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZTransform.cpp' object='ZTransform.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZTransform.obj `if test -f '$(SCENESOURCEPATH)/ZTransform.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZTransform.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZTransform.cpp'; fi`

ZViewpoint.o: $(SCENESOURCEPATH)/ZViewpoint.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZViewpoint.o -MD -MP -MF $(DEPDIR)/ZViewpoint.Tpo -c -o ZViewpoint.o `test -f '$(SCENESOURCEPATH)/ZViewpoint.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZViewpoint.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZViewpoint.Tpo $(DEPDIR)/ZViewpoint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZViewpoint.cpp' object='ZViewpoint.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZViewpoint.o `test -f '$(SCENESOURCEPATH)/ZViewpoint.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZViewpoint.cpp

ZViewpoint.obj: $(SCENESOURCEPATH)/ZViewpoint.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZViewpoint.obj -MD -MP -MF $(DEPDIR)/ZViewpoint.Tpo -c -o ZViewpoint.obj `if test -f '$(SCENESOURCEPATH)/ZViewpoint.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZViewpoint.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZViewpoint.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZViewpoint.Tpo $(DEPDIR)/ZViewpoint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZViewpoint.cpp' object='ZViewpoint.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZViewpoint.obj `if test -f '$(SCENESOURCEPATH)/ZViewpoint.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZViewpoint.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZViewpoint.cpp'; fi`

ZVrmlNode.o: $(SCENESOURCEPATH)/ZVrmlNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZVrmlNode.o -MD -MP -MF $(DEPDIR)/ZVrmlNode.Tpo -c -o ZVrmlNode.o `test -f '$(SCENESOURCEPATH)/ZVrmlNode.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZVrmlNode.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZVrmlNode.Tpo $(DEPDIR)/ZVrmlNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZVrmlNode.cpp' object='ZVrmlNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZVrmlNode.o `test -f '$(SCENESOURCEPATH)/ZVrmlNode.cpp' || echo '$(srcdir)/'`$(SCENESOURCEPATH)/ZVrmlNode.cpp

ZVrmlNode.obj: $(SCENESOURCEPATH)/ZVrmlNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZVrmlNode.obj -MD -MP -MF $(DEPDIR)/ZVrmlNode.Tpo -c -o ZVrmlNode.obj `if test -f '$(SCENESOURCEPATH)/ZVrmlNode.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZVrmlNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZVrmlNode.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZVrmlNode.Tpo $(DEPDIR)/ZVrmlNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(SCENESOURCEPATH)/ZVrmlNode.cpp' object='ZVrmlNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZVrmlNode.obj `if test -f '$(SCENESOURCEPATH)/ZVrmlNode.cpp'; then $(CYGPATH_W) '$(SCENESOURCEPATH)/ZVrmlNode.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SCENESOURCEPATH)/ZVrmlNode.cpp'; fi`

Config.o: ../Common/Config.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Config.o -MD -MP -MF $(DEPDIR)/Config.Tpo -c -o Config.o `test -f '../Common/Config.cpp' || echo '$(srcdir)/'`../Common/Config.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Config.Tpo $(DEPDIR)/Config.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/Config.cpp' object='Config.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Config.o `test -f '../Common/Config.cpp' || echo '$(srcdir)/'`../Common/Config.cpp

Config.obj: ../Common/Config.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Config.obj -MD -MP -MF $(DEPDIR)/Config.Tpo -c -o Config.obj `if test -f '../Common/Config.cpp'; then $(CYGPATH_W) '../Common/Config.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/Config.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Config.Tpo $(DEPDIR)/Config.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/Config.cpp' object='Config.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Config.obj `if test -f '../Common/Config.cpp'; then $(CYGPATH_W) '../Common/Config.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/Config.cpp'; fi`

ControlVariable.o: ../Common/ControlVariable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ControlVariable.o -MD -MP -MF $(DEPDIR)/ControlVariable.Tpo -c -o ControlVariable.o `test -f '../Common/ControlVariable.cpp' || echo '$(srcdir)/'`../Common/ControlVariable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ControlVariable.Tpo $(DEPDIR)/ControlVariable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/ControlVariable.cpp' object='ControlVariable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ControlVariable.o `test -f '../Common/ControlVariable.cpp' || echo '$(srcdir)/'`../Common/ControlVariable.cpp

ControlVariable.obj: ../Common/ControlVariable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ControlVariable.obj -MD -MP -MF $(DEPDIR)/ControlVariable.Tpo -c -o ControlVariable.obj `if test -f '../Common/ControlVariable.cpp'; then $(CYGPATH_W) '../Common/ControlVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/ControlVariable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ControlVariable.Tpo $(DEPDIR)/ControlVariable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/ControlVariable.cpp' object='ControlVariable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ControlVariable.obj `if test -f '../Common/ControlVariable.cpp'; then $(CYGPATH_W) '../Common/ControlVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/ControlVariable.cpp'; fi`

LogVariable.o: ../Common/LogVariable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogVariable.o -MD -MP -MF $(DEPDIR)/LogVariable.Tpo -c -o LogVariable.o `test -f '../Common/LogVariable.cpp' || echo '$(srcdir)/'`../Common/LogVariable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LogVariable.Tpo $(DEPDIR)/LogVariable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/LogVariable.cpp' object='LogVariable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogVariable.o `test -f '../Common/LogVariable.cpp' || echo '$(srcdir)/'`../Common/LogVariable.cpp

LogVariable.obj: ../Common/LogVariable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogVariable.obj -MD -MP -MF $(DEPDIR)/LogVariable.Tpo -c -o LogVariable.obj `if test -f '../Common/LogVariable.cpp'; then $(CYGPATH_W) '../Common/LogVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/LogVariable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LogVariable.Tpo $(DEPDIR)/LogVariable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/LogVariable.cpp' object='LogVariable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogVariable.obj `if test -f '../Common/LogVariable.cpp'; then $(CYGPATH_W) '../Common/LogVariable.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/LogVariable.cpp'; fi`

LogVariableBase.o: ../Common/LogVariableBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogVariableBase.o -MD -MP -MF $(DEPDIR)/LogVariableBase.Tpo -c -o LogVariableBase.o `test -f '../Common/LogVariableBase.cpp' || echo '$(srcdir)/'`../Common/LogVariableBase.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LogVariableBase.Tpo $(DEPDIR)/LogVariableBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/LogVariableBase.cpp' object='LogVariableBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogVariableBase.o `test -f '../Common/LogVariableBase.cpp' || echo '$(srcdir)/'`../Common/LogVariableBase.cpp

LogVariableBase.obj: ../Common/LogVariableBase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogVariableBase.obj -MD -MP -MF $(DEPDIR)/LogVariableBase.Tpo -c -o LogVariableBase.obj `if test -f '../Common/LogVariableBase.cpp'; then $(CYGPATH_W) '../Common/LogVariableBase.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/LogVariableBase.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LogVariableBase.Tpo $(DEPDIR)/LogVariableBase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/LogVariableBase.cpp' object='LogVariableBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogVariableBase.obj `if test -f '../Common/LogVariableBase.cpp'; then $(CYGPATH_W) '../Common/LogVariableBase.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/LogVariableBase.cpp'; fi`

LogVariableGUI.o: ../Common/../Common/LogVariableGUI.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogVariableGUI.o -MD -MP -MF $(DEPDIR)/LogVariableGUI.Tpo -c -o LogVariableGUI.o `test -f '../Common/../Common/LogVariableGUI.cpp' || echo '$(srcdir)/'`../Common/../Common/LogVariableGUI.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LogVariableGUI.Tpo $(DEPDIR)/LogVariableGUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/../Common/LogVariableGUI.cpp' object='LogVariableGUI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogVariableGUI.o `test -f '../Common/../Common/LogVariableGUI.cpp' || echo '$(srcdir)/'`../Common/../Common/LogVariableGUI.cpp

LogVariableGUI.obj: ../Common/../Common/LogVariableGUI.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogVariableGUI.obj -MD -MP -MF $(DEPDIR)/LogVariableGUI.Tpo -c -o LogVariableGUI.obj `if test -f '../Common/../Common/LogVariableGUI.cpp'; then $(CYGPATH_W) '../Common/../Common/LogVariableGUI.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/../Common/LogVariableGUI.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/LogVariableGUI.Tpo $(DEPDIR)/LogVariableGUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/../Common/LogVariableGUI.cpp' object='LogVariableGUI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogVariableGUI.obj `if test -f '../Common/../Common/LogVariableGUI.cpp'; then $(CYGPATH_W) '../Common/../Common/LogVariableGUI.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/../Common/LogVariableGUI.cpp'; fi`

Variable.o: ../Common/Variable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Variable.o -MD -MP -MF $(DEPDIR)/Variable.Tpo -c -o Variable.o `test -f '../Common/Variable.cpp' || echo '$(srcdir)/'`../Common/Variable.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Variable.Tpo $(DEPDIR)/Variable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/Variable.cpp' object='Variable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Variable.o `test -f '../Common/Variable.cpp' || echo '$(srcdir)/'`../Common/Variable.cpp

Variable.obj: ../Common/Variable.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Variable.obj -MD -MP -MF $(DEPDIR)/Variable.Tpo -c -o Variable.obj `if test -f '../Common/Variable.cpp'; then $(CYGPATH_W) '../Common/Variable.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/Variable.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/Variable.Tpo $(DEPDIR)/Variable.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/Variable.cpp' object='Variable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Variable.obj `if test -f '../Common/Variable.cpp'; then $(CYGPATH_W) '../Common/Variable.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/Variable.cpp'; fi`

guiMessenger.o: ../Common/guiMessenger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT guiMessenger.o -MD -MP -MF $(DEPDIR)/guiMessenger.Tpo -c -o guiMessenger.o `test -f '../Common/guiMessenger.cpp' || echo '$(srcdir)/'`../Common/guiMessenger.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/guiMessenger.Tpo $(DEPDIR)/guiMessenger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/guiMessenger.cpp' object='guiMessenger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o guiMessenger.o `test -f '../Common/guiMessenger.cpp' || echo '$(srcdir)/'`../Common/guiMessenger.cpp

guiMessenger.obj: ../Common/guiMessenger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT guiMessenger.obj -MD -MP -MF $(DEPDIR)/guiMessenger.Tpo -c -o guiMessenger.obj `if test -f '../Common/guiMessenger.cpp'; then $(CYGPATH_W) '../Common/guiMessenger.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/guiMessenger.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/guiMessenger.Tpo $(DEPDIR)/guiMessenger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/guiMessenger.cpp' object='guiMessenger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o guiMessenger.obj `if test -f '../Common/guiMessenger.cpp'; then $(CYGPATH_W) '../Common/guiMessenger.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/guiMessenger.cpp'; fi`

pugixml.o: ../Common/pugixml.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pugixml.o -MD -MP -MF $(DEPDIR)/pugixml.Tpo -c -o pugixml.o `test -f '../Common/pugixml.cpp' || echo '$(srcdir)/'`../Common/pugixml.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/pugixml.Tpo $(DEPDIR)/pugixml.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/pugixml.cpp' object='pugixml.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pugixml.o `test -f '../Common/pugixml.cpp' || echo '$(srcdir)/'`../Common/pugixml.cpp

pugixml.obj: ../Common/pugixml.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pugixml.obj -MD -MP -MF $(DEPDIR)/pugixml.Tpo -c -o pugixml.obj `if test -f '../Common/pugixml.cpp'; then $(CYGPATH_W) '../Common/pugixml.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/pugixml.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/pugixml.Tpo $(DEPDIR)/pugixml.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/pugixml.cpp' object='pugixml.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pugixml.obj `if test -f '../Common/pugixml.cpp'; then $(CYGPATH_W) '../Common/pugixml.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/pugixml.cpp'; fi`

ZString.o: ../Common/ZString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZString.o -MD -MP -MF $(DEPDIR)/ZString.Tpo -c -o ZString.o `test -f '../Common/ZString.cpp' || echo '$(srcdir)/'`../Common/ZString.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZString.Tpo $(DEPDIR)/ZString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/ZString.cpp' object='ZString.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZString.o `test -f '../Common/ZString.cpp' || echo '$(srcdir)/'`../Common/ZString.cpp

ZString.obj: ../Common/ZString.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZString.obj -MD -MP -MF $(DEPDIR)/ZString.Tpo -c -o ZString.obj `if test -f '../Common/ZString.cpp'; then $(CYGPATH_W) '../Common/ZString.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/ZString.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZString.Tpo $(DEPDIR)/ZString.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/ZString.cpp' object='ZString.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZString.obj `if test -f '../Common/ZString.cpp'; then $(CYGPATH_W) '../Common/ZString.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/ZString.cpp'; fi`

ZPath.o: ../Common/ZPath.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZPath.o -MD -MP -MF $(DEPDIR)/ZPath.Tpo -c -o ZPath.o `test -f '../Common/ZPath.cpp' || echo '$(srcdir)/'`../Common/ZPath.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZPath.Tpo $(DEPDIR)/ZPath.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/ZPath.cpp' object='ZPath.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZPath.o `test -f '../Common/ZPath.cpp' || echo '$(srcdir)/'`../Common/ZPath.cpp

ZPath.obj: ../Common/ZPath.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ZPath.obj -MD -MP -MF $(DEPDIR)/ZPath.Tpo -c -o ZPath.obj `if test -f '../Common/ZPath.cpp'; then $(CYGPATH_W) '../Common/ZPath.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/ZPath.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/ZPath.Tpo $(DEPDIR)/ZPath.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../Common/ZPath.cpp' object='ZPath.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ZPath.obj `if test -f '../Common/ZPath.cpp'; then $(CYGPATH_W) '../Common/ZPath.cpp'; else $(CYGPATH_W) '$(srcdir)/../Common/ZPath.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-SceneHSHEADERS: $(SceneHS_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(SceneHSdir)" || $(MKDIR_P) "$(DESTDIR)$(SceneHSdir)"
	@list='$(SceneHS_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(SceneHSHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(SceneHSdir)/$$f'"; \
	  $(SceneHSHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(SceneHSdir)/$$f"; \
	done

uninstall-SceneHSHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(SceneHS_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(SceneHSdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(SceneHSdir)/$$f"; \
	done
install-SceneSourceHEADERS: $(SceneSource_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(SceneSourcedir)" || $(MKDIR_P) "$(DESTDIR)$(SceneSourcedir)"
	@list='$(SceneSource_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(SceneSourceHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(SceneSourcedir)/$$f'"; \
	  $(SceneSourceHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(SceneSourcedir)/$$f"; \
	done

uninstall-SceneSourceHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(SceneSource_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(SceneSourcedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(SceneSourcedir)/$$f"; \
	done
install-ZenomGUIHSHEADERS: $(ZenomGUIHS_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(ZenomGUIHSdir)" || $(MKDIR_P) "$(DESTDIR)$(ZenomGUIHSdir)"
	@list='$(ZenomGUIHS_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(ZenomGUIHSHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(ZenomGUIHSdir)/$$f'"; \
	  $(ZenomGUIHSHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(ZenomGUIHSdir)/$$f"; \
	done

uninstall-ZenomGUIHSHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(ZenomGUIHS_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(ZenomGUIHSdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(ZenomGUIHSdir)/$$f"; \
	done
install-ZenomGUISourceHEADERS: $(ZenomGUISource_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(ZenomGUISourcedir)" || $(MKDIR_P) "$(DESTDIR)$(ZenomGUISourcedir)"
	@list='$(ZenomGUISource_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(ZenomGUISourceHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(ZenomGUISourcedir)/$$f'"; \
	  $(ZenomGUISourceHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(ZenomGUISourcedir)/$$f"; \
	done

uninstall-ZenomGUISourceHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(ZenomGUISource_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(ZenomGUISourcedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(ZenomGUISourcedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(SceneHSdir)" "$(DESTDIR)$(SceneSourcedir)" "$(DESTDIR)$(ZenomGUIHSdir)" "$(DESTDIR)$(ZenomGUISourcedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-SceneHSHEADERS install-SceneSourceHEADERS \
	install-ZenomGUIHSHEADERS install-ZenomGUISourceHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-SceneHSHEADERS uninstall-SceneSourceHEADERS \
	uninstall-ZenomGUIHSHEADERS uninstall-ZenomGUISourceHEADERS \
	uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-SceneHSHEADERS install-SceneSourceHEADERS \
	install-ZenomGUIHSHEADERS install-ZenomGUISourceHEADERS \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-SceneHSHEADERS \
	uninstall-SceneSourceHEADERS uninstall-ZenomGUIHSHEADERS \
	uninstall-ZenomGUISourceHEADERS uninstall-am \
	uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
